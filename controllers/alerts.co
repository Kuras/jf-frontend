angular.module('jf')
.controller 'AlertsCtrl', !($scope, CONFIG, Events, $timeout)->
	
	if CONFIG.debug
		window.alertScope = $scope

	lastMessageId = 0
	function generateId
		lastMessageId++
		return lastMessageId

	$scope.alerts = [
		# { type: 'danger', msg: 'Oh snap! Change a few things up and try submitting again.' },
		# { type: 'success', msg: 'Well done! You successfully read this important alert message.' }
	]

	$scope.addAlert = ->
		$scope.alerts.push({msg: 'Another alert!'})

	$scope.closeAlert = (index)->
		if index >= 0
			$scope.alerts.splice(index, 1)

	# TODO: lodash
	isString = (value)-> return typeof value == 'string' || value && typeof value == 'object' && toString.call(value) == '[object String]' || false;

	# adds messsage and returns id of the message
	function addMessage(msg, type || \success, contentType)
		if not isString(msg)
			msg := msg.toString()

		if contentType is "application/json" and msg.match(/^"/)
			msg := msg.substring 1, msg.length-1

		message = {
			type: type
			msg: msg
			id: generateId()
			contentType: contentType
		}

		$scope.alerts.push(message)
		return message.id

	function getMessageIndexById(id)
		_.findIndex $scope.alerts, (msg)-> id is msg.id

	function addMessageAutoClose(msg, type || \success, contentType)
		id = addMessage msg, type, contentType
		$timeout (-> $scope.closeAlert getMessageIndexById(id)), CONFIG.common.alertAutoCloseTimeout

	Events.on "ajax:message_persistent", (msg, contentType)->
		addMessage msg, contentType

	Events.on "ajax:message", (msg, contentType)->
		addMessageAutoClose msg, \success, contentType

	Events.on "alerts:message", (msg, contentType)->
		addMessageAutoClose msg, \success, contentType

	Events.on "ajax:message_close", !(index)->
		$scope.closeAlert(index)

	errorHandler = (msg, contentType)->
		if msg
			addMessageAutoClose msg, \danger, contentType

	Events.on "ajax:error", errorHandler
	Events.on "alerts:error", errorHandler

