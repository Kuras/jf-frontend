angular.module('jf')
.service 'Spinner', (CONFIG)->

	!function SpinnerWrapper(idSelector, spinnerConfig)
		this.spinnerTarget = document.getElementById(idSelector)
		this.spinner = new Spinner(spinnerConfig).spin(this.spinnerTarget).stop()

		this.spinnerDelay = spinnerConfig.delay
		this.spinnerTimeout = false
		this.spinnerIsVisible = false

		console.log "SPINNER instantiated"

		if CONFIG.debug
			window.spinStart = this.start
			window.spinStop = this.stop

	SpinnerWrapper.prototype.start = !->
		if not @spinnerDelay
			console.log "SPINNER start"
			@spin!
		else
			if @spinnerTimeout is false
				console.log "SPINNER start with delay "+@spinnerDelay+"ms"
				@spinnerTimeout = setTimeout (~> @spin!), @spinnerDelay
			else
				console.log "SPINNER already delay started, not starting"

	SpinnerWrapper.prototype.spin = !->
		@spinner.spin(@spinnerTarget)
		@spinnerIsVisible = true

	SpinnerWrapper.prototype.stop = !->
		if @spinnerTimeout is not false
			console.log "SPINNER stop (timeout only)"
			clearTimeout @spinnerTimeout
			@spinnerTimeout = false

		if @spinnerIsVisible
			console.log "SPINNER stop"
			@spinner.stop()
			@spinnerIsVisible = false

	return (selector, spinnerConfig)-> new SpinnerWrapper(selector, spinnerConfig)
